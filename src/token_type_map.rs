use lazy_static::lazy_static;
use std::collections::HashMap;

use crate::token_type::TokenType;

lazy_static! {
    pub static ref KEYWORD_TOKEN_TYPE_MAP: HashMap<&'static str, TokenType> = {
        let mut m = HashMap::new();
        m.insert("ADD", TokenType::Add);
        m.insert("ALL", TokenType::All);
        m.insert("ALTER", TokenType::Alter);
        m.insert("ANALYZE", TokenType::Analyze);
        m.insert("AND", TokenType::And);
        m.insert("AS", TokenType::As);
        m.insert("ASC", TokenType::Asc);
        m.insert("BETWEEN", TokenType::Between);
        m.insert("BIGINT", TokenType::BigInt);
        m.insert("BINARY", TokenType::Binary);
        m.insert("BLOB", TokenType::Blob);
        m.insert("BOTH", TokenType::Both);
        m.insert("BY", TokenType::By);
        m.insert("CALL", TokenType::Call);
        m.insert("CASCADE", TokenType::Cascade);
        m.insert("CASE", TokenType::CaseKwd);
        m.insert("CHANGE", TokenType::Change);
        m.insert("CHARACTER", TokenType::Character);
        m.insert("CHAR", TokenType::Char);
        m.insert("CHECK", TokenType::Check);
        m.insert("COLLATE", TokenType::Collate);
        m.insert("COLUMN", TokenType::Column);
        m.insert("CONSTRAINT", TokenType::Constraint);
        m.insert("CONVERT", TokenType::Convert);
        m.insert("CREATE", TokenType::Create);
        m.insert("CROSS", TokenType::Cross);
        m.insert("CUME_DIST", TokenType::CumeDist);
        m.insert("CURRENT_DATE", TokenType::CurrentDate);
        m.insert("CURRENT_TIME", TokenType::CurrentTime);
        m.insert("CURRENT_TIMESTAMP", TokenType::CurrentTs);
        m.insert("CURRENT_USER", TokenType::CurrentUser);
        m.insert("CURRENT_ROLE", TokenType::CurrentRole);
        m.insert("DATABASE", TokenType::Database);
        m.insert("DATABASES", TokenType::Databases);
        m.insert("DAY_HOUR", TokenType::DayHour);
        m.insert("DAY_MICROSECOND", TokenType::DayMicrosecond);
        m.insert("DAY_MINUTE", TokenType::DayMinute);
        m.insert("DAY_SECOND", TokenType::DaySecond);
        m.insert("DECIMAL", TokenType::Decimal);
        m.insert("DEFAULT", TokenType::DefaultKwd);
        m.insert("DELAYED", TokenType::Delayed);
        m.insert("DELETE", TokenType::DeleteKwd);
        m.insert("DENSE_RANK", TokenType::DenseRank);
        m.insert("DESC", TokenType::Desc);
        m.insert("DESCRIBE", TokenType::Describe);
        m.insert("DISTINCT", TokenType::Distinct);
        m.insert("DISTINCTROW", TokenType::DistinctRow);
        m.insert("DIV", TokenType::Div);
        m.insert("DOUBLE", TokenType::Double);
        m.insert("DROP", TokenType::Drop);
        m.insert("DUAL", TokenType::Dual);
        m.insert("ELSE", TokenType::ElseKwd);
        m.insert("ENCLOSED", TokenType::Enclosed);
        m.insert("ESCAPED", TokenType::Escaped);
        m.insert("EXISTS", TokenType::Exists);
        m.insert("EXPLAIN", TokenType::Explain);
        m.insert("EXCEPT", TokenType::Except);
        m.insert("FALSE", TokenType::FalseKwd);
        m.insert("FETCH", TokenType::Fetch);
        m.insert("FIRST_VALUE", TokenType::FirstValue);
        m.insert("FLOAT", TokenType::Float);
        m.insert("FOR", TokenType::ForKwd);
        m.insert("FORCE", TokenType::Force);
        m.insert("FOREIGN", TokenType::Foreign);
        m.insert("FROM", TokenType::From);
        m.insert("FULLTEXT", TokenType::Fulltext);
        m.insert("GENERATED", TokenType::Generated);
        m.insert("GRANT", TokenType::Grant);
        m.insert("GROUP", TokenType::Group);
        m.insert("GROUPS", TokenType::Groups);
        m.insert("HAVING", TokenType::Having);
        m.insert("HIGH_PRIORITY", TokenType::HighPriority);
        m.insert("HOUR_MICROSECOND", TokenType::HourMicrosecond);
        m.insert("HOUR_MINUTE", TokenType::HourMinute);
        m.insert("HOUR_SECOND", TokenType::HourSecond);
        m.insert("IF", TokenType::IfKwd);
        m.insert("IGNORE", TokenType::Ignore);
        m.insert("IN", TokenType::In);
        m.insert("INDEX", TokenType::Index);
        m.insert("INFILE", TokenType::Infile);
        m.insert("INNER", TokenType::Inner);
        m.insert("INTEGER", TokenType::Integer);
        m.insert("INTERSECT", TokenType::Intersect);
        m.insert("INTERVAL", TokenType::Interval);
        m.insert("INTO", TokenType::Into);
        m.insert("OUTFILE", TokenType::Outfile);
        m.insert("IS", TokenType::Is);
        m.insert("INSERT", TokenType::Insert);
        m.insert("INT", TokenType::Int);
        m.insert("INT1", TokenType::Int1);
        m.insert("INT2", TokenType::Int2);
        m.insert("INT3", TokenType::Int3);
        m.insert("INT4", TokenType::Int4);
        m.insert("INT8", TokenType::Int8);
        m.insert("JOIN", TokenType::Join);
        m.insert("KEY", TokenType::Key);
        m.insert("KEYS", TokenType::Keys);
        m.insert("KILL", TokenType::Kill);
        m.insert("LAG", TokenType::Lag);
        m.insert("LAST_VALUE", TokenType::LastValue);
        m.insert("LEAD", TokenType::Lead);
        m.insert("LEADING", TokenType::Leading);
        m.insert("LEFT", TokenType::Left);
        m.insert("LIKE", TokenType::Like);
        m.insert("LIMIT", TokenType::Limit);
        m.insert("LINES", TokenType::Lines);
        m.insert("LINEAR", TokenType::Linear);
        m.insert("LOAD", TokenType::Load);
        m.insert("LOCALTIME", TokenType::LocalTime);
        m.insert("LOCALTIMESTAMP", TokenType::LocalTs);
        m.insert("LOCK", TokenType::Lock);
        m.insert("LONGBLOB", TokenType::Longblob);
        m.insert("LONGTEXT", TokenType::Longtext);
        m.insert("LOW_PRIORITY", TokenType::LowPriority);
        m.insert("MATCH", TokenType::Match);
        m.insert("MAXVALUE", TokenType::MaxValue);
        m.insert("MEDIUMBLOB", TokenType::Mediumblob);
        m.insert("MEDIUMINT", TokenType::MediumInt);
        m.insert("MEDIUMTEXT", TokenType::Mediumtext);
        m.insert("MINUTE_MICROSECOND", TokenType::MinuteMicrosecond);
        m.insert("MINUTE_SECOND", TokenType::MinuteSecond);
        m.insert("MOD", TokenType::Mod);
        m.insert("NOT", TokenType::Not);
        m.insert("NO_WRITE_TO_BINLOG", TokenType::NoWriteToBinLog);
        m.insert("NTH_VALUE", TokenType::NthValue);
        m.insert("NTILE", TokenType::Ntile);
        m.insert("NULL", TokenType::Null);
        m.insert("NUMERIC", TokenType::Numeric);
        m.insert("OF", TokenType::Of);
        m.insert("ON", TokenType::On);
        m.insert("OPTIMIZE", TokenType::Optimize);
        m.insert("OPTION", TokenType::Option);
        m.insert("OPTIONALLY", TokenType::Optionally);
        m.insert("OR", TokenType::Or);
        m.insert("ORDER", TokenType::Order);
        m.insert("OUTER", TokenType::Outer);
        m.insert("OVER", TokenType::Over);
        m.insert("PARTITION", TokenType::Partition);
        m.insert("PERCENT_RANK", TokenType::PercentRank);
        m.insert("PRECISION", TokenType::Precision);
        m.insert("PRIMARY", TokenType::Primary);
        m.insert("PROCEDURE", TokenType::Procedure);
        m.insert("RANGE", TokenType::RangeKwd);
        m.insert("RANK", TokenType::Rank);
        m.insert("READ", TokenType::Read);
        m.insert("REAL", TokenType::Real);
        m.insert("RECURSIVE", TokenType::Recursive);
        m.insert("REFERENCES", TokenType::References);
        m.insert("REGEXP", TokenType::RegexpKwd);
        m.insert("RELEASE", TokenType::Release);
        m.insert("RENAME", TokenType::Rename);
        m.insert("REPEAT", TokenType::Repeat);
        m.insert("REPLACE", TokenType::Replace);
        m.insert("REQUIRE", TokenType::Require);
        m.insert("RESTRICT", TokenType::Restrict);
        m.insert("REVOKE", TokenType::Revoke);
        m.insert("RIGHT", TokenType::Right);
        m.insert("RLIKE", TokenType::Rlike);
        m.insert("ROW", TokenType::Row);
        m.insert("ROWS", TokenType::Rows);
        m.insert("ROW_NUMBER", TokenType::RowNumber);
        m.insert("SECOND_MICROSECOND", TokenType::SecondMicrosecond);
        m.insert("SELECT", TokenType::SelectKwd);
        m.insert("SET", TokenType::Set);
        m.insert("SHOW", TokenType::Show);
        m.insert("SMALLINT", TokenType::SmallInt);
        m.insert("SPATIAL", TokenType::Spatial);
        m.insert("SQL", TokenType::Sql);
        m.insert("SQL_BIG_RESULT", TokenType::SqlBigResult);
        m.insert("SQL_CALC_FOUND_ROWS", TokenType::SqlCalcFoundRows);
        m.insert("SQL_SMALL_RESULT", TokenType::SqlSmallResult);
        m.insert("SSL", TokenType::Ssl);
        m.insert("STARTING", TokenType::Starting);
        m.insert("STATS_EXTENDED", TokenType::StatsExtended);
        m.insert("STRAIGHT_JOIN", TokenType::StraightJoin);
        m.insert("TABLE", TokenType::TableKwd);
        m.insert("TABLESAMPLE", TokenType::TableSample);
        m.insert("STORED", TokenType::Stored);
        m.insert("TERMINATED", TokenType::Terminated);
        m.insert("THEN", TokenType::Then);
        m.insert("TINYBLOB", TokenType::Tinyblob);
        m.insert("TINYINT", TokenType::TinyInt);
        m.insert("TINYTEXT", TokenType::Tinytext);
        m.insert("TO", TokenType::To);
        m.insert("TRAILING", TokenType::Trailing);
        m.insert("TRIGGER", TokenType::Trigger);
        m.insert("TRUE", TokenType::TrueKwd);
        m.insert("UNIQUE", TokenType::Unique);
        m.insert("UNION", TokenType::Union);
        m.insert("UNLOCK", TokenType::Unlock);
        m.insert("UNSIGNED", TokenType::Unsigned);
        m.insert("UPDATE", TokenType::Update);
        m.insert("USAGE", TokenType::Usage);
        m.insert("USE", TokenType::Use);
        m.insert("USING", TokenType::Using);
        m.insert("UTC_DATE", TokenType::UtcDate);
        m.insert("UTC_TIMESTAMP", TokenType::UtcTimestamp);
        m.insert("UTC_TIME", TokenType::UtcTime);
        m.insert("VALUES", TokenType::Values);
        m.insert("LONG", TokenType::Long);
        m.insert("VARCHAR", TokenType::Varchar);
        m.insert("VARCHARACTER", TokenType::Varcharacter);
        m.insert("VARBINARY", TokenType::Varbinary);
        m.insert("VARYING", TokenType::Varying);
        m.insert("VIRTUAL", TokenType::Virtual);
        m.insert("WHEN", TokenType::When);
        m.insert("WHERE", TokenType::Where);
        m.insert("WRITE", TokenType::Write);
        m.insert("WINDOW", TokenType::Window);
        m.insert("WITH", TokenType::With);
        m.insert("XOR", TokenType::Xor);
        m.insert("YEAR_MONTH", TokenType::YearMonth);
        m.insert("ZEROFILL", TokenType::Zerofill);
        m.insert("NATURAL", TokenType::Natural);
        m.insert("ACCOUNT", TokenType::Account);
        m.insert("ACTION", TokenType::Action);
        m.insert("ADVISE", TokenType::Advise);
        m.insert("AFTER", TokenType::After);
        m.insert("AGAINST", TokenType::Against);
        m.insert("AGO", TokenType::Ago);
        m.insert("ALGORITHM", TokenType::Algorithm);
        m.insert("ALWAYS", TokenType::Always);
        m.insert("ANY", TokenType::Any);
        m.insert("ASCII", TokenType::Ascii);
        m.insert("ATTRIBUTES", TokenType::Attributes);
        m.insert("AUTO_ID_CACHE", TokenType::AutoIdCache);
        m.insert("AUTO_INCREMENT", TokenType::AutoIncrement);
        m.insert("AUTO_RANDOM", TokenType::AutoRandom);
        m.insert("AUTO_RANDOM_BASE", TokenType::AutoRandomBase);
        m.insert("AVG", TokenType::Avg);
        m.insert("AVG_ROW_LENGTH", TokenType::AvgRowLength);
        m.insert("BACKEND", TokenType::Backend);
        m.insert("BACKUP", TokenType::Backup);
        m.insert("BACKUPS", TokenType::Backups);
        m.insert("BEGIN", TokenType::Begin);
        m.insert("BERNOULLI", TokenType::Bernoulli);
        m.insert("BINDING", TokenType::Binding);
        m.insert("BINDINGS", TokenType::Bindings);
        m.insert("BINLOG", TokenType::Binlog);
        m.insert("BIT", TokenType::Bit);
        m.insert("BLOCK", TokenType::Block);
        m.insert("BOOLEAN", TokenType::Boolean);
        m.insert("BOOL", TokenType::Bool);
        m.insert("BTREE", TokenType::Btree);
        m.insert("BYTE", TokenType::Byte);
        m.insert("CACHE", TokenType::Cache);
        m.insert("CAPTURE", TokenType::Capture);
        m.insert("CASCADED", TokenType::Cascaded);
        m.insert("CAUSAL", TokenType::Causal);
        m.insert("CHAIN", TokenType::Chain);
        m.insert("CHARSET", TokenType::CharsetKwd);
        m.insert("CHECKPOINT", TokenType::Checkpoint);
        m.insert("CHECKSUM", TokenType::Checksum);
        m.insert("CIPHER", TokenType::Cipher);
        m.insert("CLEANUP", TokenType::Cleanup);
        m.insert("CLIENT", TokenType::Client);
        m.insert("CLIENT_ERRORS_SUMMARY", TokenType::ClientErrorsSummary);
        m.insert("COALESCE", TokenType::Coalesce);
        m.insert("COLLATION", TokenType::Collation);
        m.insert("COLUMN_FORMAT", TokenType::ColumnFormat);
        m.insert("COLUMNS", TokenType::Columns);
        m.insert("CONFIG", TokenType::Config);
        m.insert("COMMENT", TokenType::Comment);
        m.insert("COMMIT", TokenType::Commit);
        m.insert("COMMITTED", TokenType::Committed);
        m.insert("COMPACT", TokenType::Compact);
        m.insert("COMPRESSED", TokenType::Compressed);
        m.insert("COMPRESSION", TokenType::Compression);
        m.insert("CONCURRENCY", TokenType::Concurrency);
        m.insert("CONNECTION", TokenType::Connection);
        m.insert("CONSISTENCY", TokenType::Consistency);
        m.insert("CONSISTENT", TokenType::Consistent);
        m.insert("CONTEXT", TokenType::Context);
        m.insert("CPU", TokenType::Cpu);
        m.insert("CSV_BACKSLASH_ESCAPE", TokenType::CsvBackslashEscape);
        m.insert("CSV_DELIMITER", TokenType::CsvDelimiter);
        m.insert("CSV_HEADER", TokenType::CsvHeader);
        m.insert("CSV_NOT_NULL", TokenType::CsvNotNull);
        m.insert("CSV_NULL", TokenType::CsvNull);
        m.insert("CSV_SEPARATOR", TokenType::CsvSeparator);
        m.insert("CSV_TRIM_LAST_SEPARATORS", TokenType::CsvTrimLastSeparators);
        m.insert("CURRENT", TokenType::Current);
        m.insert("CLUSTERED", TokenType::Clustered);
        m.insert("CYCLE", TokenType::Cycle);
        m.insert("DATA", TokenType::Data);
        m.insert("DATETIME", TokenType::Datetime);
        m.insert("DATE", TokenType::Date);
        m.insert("DAY", TokenType::Day);
        m.insert("DEALLOCATE", TokenType::Deallocate);
        m.insert("DEFINER", TokenType::Definer);
        m.insert("DELAY_KEY_WRITE", TokenType::DelayKeyWrite);
        m.insert("DIRECTORY", TokenType::Directory);
        m.insert("DISABLE", TokenType::Disable);
        m.insert("DISCARD", TokenType::Discard);
        m.insert("DISK", TokenType::Disk);
        m.insert("DO", TokenType::Do);
        m.insert("DUPLICATE", TokenType::Duplicate);
        m.insert("DYNAMIC", TokenType::Dynamic);
        m.insert("ENABLE", TokenType::Enable);
        m.insert("ENCRYPTION", TokenType::Encryption);
        m.insert("END", TokenType::End);
        m.insert("ENFORCED", TokenType::Enforced);
        m.insert("ENGINE", TokenType::Engine);
        m.insert("ENGINES", TokenType::Engines);
        m.insert("ENUM", TokenType::Enum);
        m.insert("ERROR", TokenType::ErrorKwd);
        m.insert("ESCAPE", TokenType::Escape);
        m.insert("EVENT", TokenType::Event);
        m.insert("EVENTS", TokenType::Events);
        m.insert("EVOLVE", TokenType::Evolve);
        m.insert("EXCHANGE", TokenType::Exchange);
        m.insert("EXCLUSIVE", TokenType::Exclusive);
        m.insert("EXECUTE", TokenType::Execute);
        m.insert("EXPANSION", TokenType::Expansion);
        m.insert("EXPIRE", TokenType::Expire);
        m.insert("EXTENDED", TokenType::Extended);
        m.insert("FAULTS", TokenType::FaultsSym);
        m.insert("FIELDS", TokenType::Fields);
        m.insert("FILE", TokenType::File);
        m.insert("FIRST", TokenType::First);
        m.insert("FIXED", TokenType::Fixed);
        m.insert("FLUSH", TokenType::Flush);
        m.insert("FOLLOWING", TokenType::Following);
        m.insert("FORMAT", TokenType::Format);
        m.insert("FULL", TokenType::Full);
        m.insert("FUNCTION", TokenType::Function);
        m.insert("GENERAL", TokenType::General);
        m.insert("GLOBAL", TokenType::Global);
        m.insert("GRANTS", TokenType::Grants);
        m.insert("HASH", TokenType::Hash);
        m.insert("HELP", TokenType::Help);
        m.insert("HISTOGRAM", TokenType::Histogram);
        m.insert("HISTORY", TokenType::History);
        m.insert("HOSTS", TokenType::Hosts);
        m.insert("HOUR", TokenType::Hour);
        m.insert("IDENTIFIED", TokenType::Identified);
        m.insert("ERRORS", TokenType::IdentSQLErrors);
        m.insert("IMPORT", TokenType::ImportKwd);
        m.insert("IMPORTS", TokenType::Imports);
        m.insert("INCREMENT", TokenType::Increment);
        m.insert("INCREMENTAL", TokenType::Incremental);
        m.insert("INDEXES", TokenType::Indexes);
        m.insert("INSERT_METHOD", TokenType::InsertMethod);
        m.insert("INSTANCE", TokenType::Instance);
        m.insert("INVISIBLE", TokenType::Invisible);
        m.insert("INVOKER", TokenType::Invoker);
        m.insert("IO", TokenType::Io);
        m.insert("IPC", TokenType::Ipc);
        m.insert("ISOLATION", TokenType::Isolation);
        m.insert("ISSUER", TokenType::Issuer);
        m.insert("JSON", TokenType::Json);
        m.insert("KEY_BLOCK_SIZE", TokenType::KeyBlockSize);
        m.insert("LABELS", TokenType::Labels);
        m.insert("LANGUAGE", TokenType::Language);
        m.insert("LAST", TokenType::Last);
        m.insert("LAST_BACKUP", TokenType::LastBackup);
        m.insert("LASTVAL", TokenType::Lastval);
        m.insert("LESS", TokenType::Less);
        m.insert("LEVEL", TokenType::Level);
        m.insert("LIST", TokenType::List);
        m.insert("LOCAL", TokenType::Local);
        m.insert("LOCKED", TokenType::Locked);
        m.insert("LOCATION", TokenType::Location);
        m.insert("LOGS", TokenType::Logs);
        m.insert("MASTER", TokenType::Master);
        m.insert("MAX_IDXNUM", TokenType::MaxIdxnum);
        m.insert("MAX_MINUTES", TokenType::MaxMinutes);
        m.insert("MAX_CONNECTIONS_PER_HOUR", TokenType::MaxConnectionsPerHour);
        m.insert("MAX_QUERIES_PER_HOUR", TokenType::MaxQueriesPerHour);
        m.insert("MAX_ROWS", TokenType::MaxRows);
        m.insert("MAX_UPDATES_PER_HOUR", TokenType::MaxUpdatesPerHour);
        m.insert("MAX_USER_CONNECTIONS", TokenType::MaxUserConnections);
        m.insert("MB", TokenType::Mb);
        m.insert("MEMORY", TokenType::Memory);
        m.insert("MERGE", TokenType::Merge);
        m.insert("MICROSECOND", TokenType::Microsecond);
        m.insert("MIN_ROWS", TokenType::MinRows);
        m.insert("MINUTE", TokenType::Minute);
        m.insert("MINVALUE", TokenType::MinValue);
        m.insert("MODE", TokenType::Mode);
        m.insert("MODIFY", TokenType::Modify);
        m.insert("MONTH", TokenType::Month);
        m.insert("NAMES", TokenType::Names);
        m.insert("NATIONAL", TokenType::National);
        m.insert("NCHAR", TokenType::Nchar);
        m.insert("NEVER", TokenType::Never);
        m.insert("NEXT", TokenType::Next);
        m.insert("NEXTVAL", TokenType::Nextval);
        m.insert("NO", TokenType::No);
        m.insert("NOCACHE", TokenType::Nocache);
        m.insert("NOCYCLE", TokenType::Nocycle);
        m.insert("NODEGROUP", TokenType::Nodegroup);
        m.insert("NOMAXVALUE", TokenType::Nomaxvalue);
        m.insert("NOMINVALUE", TokenType::Nominvalue);
        m.insert("NONCLUSTERED", TokenType::Nonclustered);
        m.insert("NONE", TokenType::NoneType);
        m.insert("NOWAIT", TokenType::Nowait);
        m.insert("NVARCHAR", TokenType::Nvarchar);
        m.insert("NULLS", TokenType::Nulls);
        m.insert("OFF", TokenType::Off);
        m.insert("OFFSET", TokenType::Offset);
        m.insert("ON_DUPLICATE", TokenType::OnDuplicate);
        m.insert("ONLINE", TokenType::Online);
        m.insert("ONLY", TokenType::Only);
        m.insert("OPEN", TokenType::Open);
        m.insert("OPTIONAL", TokenType::Optional);
        m.insert("PACK_KEYS", TokenType::PackKeys);
        m.insert("PAGE", TokenType::PageSym);
        m.insert("PARSER", TokenType::Parser);
        m.insert("PARTIAL", TokenType::Partial);
        m.insert("PARTITIONING", TokenType::Partitioning);
        m.insert("PARTITIONS", TokenType::Partitions);
        m.insert("PASSWORD", TokenType::Password);
        m.insert("PERCENT", TokenType::PercentType);
        m.insert("PER_DB", TokenType::PerDB);
        m.insert("PER_TABLE", TokenType::PerTable);
        m.insert("PLUGINS", TokenType::Plugins);
        m.insert("POLICY", TokenType::Policy);
        m.insert("PRE_SPLIT_REGIONS", TokenType::PreSplitRegions);
        m.insert("PRECEDING", TokenType::Preceding);
        m.insert("PREPARE", TokenType::Prepare);
        m.insert("PRESERVE", TokenType::Preserve);
        m.insert("PRIVILEGES", TokenType::Privileges);
        m.insert("PROCESS", TokenType::Process);
        m.insert("PROCESSLIST", TokenType::Processlist);
        m.insert("PROFILE", TokenType::Profile);
        m.insert("PROFILES", TokenType::Profiles);
        m.insert("PROXY", TokenType::Proxy);
        m.insert("PURGE", TokenType::Purge);
        m.insert("QUARTER", TokenType::Quarter);
        m.insert("QUERIES", TokenType::Queries);
        m.insert("QUERY", TokenType::Query);
        m.insert("QUICK", TokenType::Quick);
        m.insert("RATE_LIMIT", TokenType::RateLimit);
        m.insert("REBUILD", TokenType::Rebuild);
        m.insert("RECOVER", TokenType::Recover);
        m.insert("REDUNDANT", TokenType::Redundant);
        m.insert("RELOAD", TokenType::Reload);
        m.insert("REMOVE", TokenType::Remove);
        m.insert("REORGANIZE", TokenType::Reorganize);
        m.insert("REPAIR", TokenType::Repair);
        m.insert("REPEATABLE", TokenType::Repeatable);
        m.insert("REPLICA", TokenType::Replica);
        m.insert("REPLICAS", TokenType::Replicas);
        m.insert("REPLICATION", TokenType::Replication);
        m.insert("REQUIRED", TokenType::Required);
        m.insert("RESPECT", TokenType::Respect);
        m.insert("RESTART", TokenType::Restart);
        m.insert("RESTORE", TokenType::Restore);
        m.insert("RESTORES", TokenType::Restores);
        m.insert("RESUME", TokenType::Resume);
        m.insert("REVERSE", TokenType::Reverse);
        m.insert("ROLE", TokenType::Role);
        m.insert("ROLLBACK", TokenType::Rollback);
        m.insert("ROUTINE", TokenType::Routine);
        m.insert("ROW_COUNT", TokenType::RowCount);
        m.insert("ROW_FORMAT", TokenType::RowFormat);
        m.insert("RTREE", TokenType::Rtree);
        m.insert("SAN", TokenType::San);
        m.insert("SECOND", TokenType::Second);
        m.insert("SECONDARY_ENGINE", TokenType::SecondaryEngine);
        m.insert("SECONDARY_LOAD", TokenType::SecondaryLoad);
        m.insert("SECONDARY_UNLOAD", TokenType::SecondaryUnload);
        m.insert("SECURITY", TokenType::Security);
        m.insert("SEND_CREDENTIALS_TO_TIKV", TokenType::SendCredentialsToTiKV);
        m.insert("SEPARATOR", TokenType::Separator);
        m.insert("SEQUENCE", TokenType::Sequence);
        m.insert("SERIAL", TokenType::Serial);
        m.insert("SERIALIZABLE", TokenType::Serializable);
        m.insert("SESSION", TokenType::Session);
        m.insert("SETVAL", TokenType::Setval);
        m.insert("SHARD_ROW_ID_BITS", TokenType::ShardRowIDBits);
        m.insert("SHARE", TokenType::Share);
        m.insert("SHARED", TokenType::Shared);
        m.insert("SHUTDOWN", TokenType::Shutdown);
        m.insert("SIGNED", TokenType::Signed);
        m.insert("SIMPLE", TokenType::Simple);
        m.insert("SKIP", TokenType::Skip);
        m.insert("SKIP_SCHEMA_FILES", TokenType::SkipSchemaFiles);
        m.insert("SLAVE", TokenType::Slave);
        m.insert("SLOW", TokenType::Slow);
        m.insert("SNAPSHOT", TokenType::Snapshot);
        m.insert("SOME", TokenType::SomeType);
        m.insert("SOURCE", TokenType::Source);
        m.insert("SQL_BUFFER_RESULT", TokenType::SqlBufferResult);
        m.insert("SQL_CACHE", TokenType::SqlCache);
        m.insert("SQL_NO_CACHE", TokenType::SqlNoCache);
        m.insert("SQL_TSI_DAY", TokenType::SqlTsiDay);
        m.insert("SQL_TSI_HOUR", TokenType::SqlTsiHour);
        m.insert("SQL_TSI_MINUTE", TokenType::SqlTsiMinute);
        m.insert("SQL_TSI_MONTH", TokenType::SqlTsiMonth);
        m.insert("SQL_TSI_QUARTER", TokenType::SqlTsiQuarter);
        m.insert("SQL_TSI_SECOND", TokenType::SqlTsiSecond);
        m.insert("SQL_TSI_WEEK", TokenType::SqlTsiWeek);
        m.insert("SQL_TSI_YEAR", TokenType::SqlTsiYear);
        m.insert("START", TokenType::Start);
        m.insert("STATS_AUTO_RECALC", TokenType::StatsAutoRecalc);
        m.insert("STATS_PERSISTENT", TokenType::StatsPersistent);
        m.insert("STATS_SAMPLE_PAGES", TokenType::StatsSamplePages);
        m.insert("STATUS", TokenType::Status);
        m.insert("STORAGE", TokenType::Storage);
        m.insert("STRICT_FORMAT", TokenType::StrictFormat);
        m.insert("SUBJECT", TokenType::Subject);
        m.insert("SUBPARTITION", TokenType::Subpartition);
        m.insert("SUBPARTITIONS", TokenType::Subpartitions);
        m.insert("SUPER", TokenType::Super);
        m.insert("SWAPS", TokenType::Swaps);
        m.insert("SWITCHES", TokenType::SwitchesSym);
        m.insert("SYSTEM", TokenType::System);
        m.insert("SYSTEM_TIME", TokenType::SystemTime);
        m.insert("TABLE_CHECKSUM", TokenType::TableChecksum);
        m.insert("TABLES", TokenType::Tables);
        m.insert("TABLESPACE", TokenType::Tablespace);
        m.insert("TEMPORARY", TokenType::Temporary);
        m.insert("TEMPTABLE", TokenType::Temptable);
        m.insert("TEXT", TokenType::Text);
        m.insert("THAN", TokenType::Than);
        m.insert("TIKV_IMPORTER", TokenType::TikvImporter);
        m.insert("TIMESTAMP", TokenType::Timestamp);
        m.insert("TIME", TokenType::Time);
        m.insert("TYPE", TokenType::Tp);
        m.insert("TRACE", TokenType::Trace);
        m.insert("TRADITIONAL", TokenType::Traditional);
        m.insert("TRANSACTION", TokenType::Transaction);
        m.insert("TRIGGERS", TokenType::Triggers);
        m.insert("TRUNCATE", TokenType::Truncate);
        m.insert("UNBOUNDED", TokenType::Unbounded);
        m.insert("UNCOMMITTED", TokenType::Uncommitted);
        m.insert("UNDEFINED", TokenType::Undefined);
        m.insert("UNICODE", TokenType::UnicodeSym);
        m.insert("UNKNOWN", TokenType::Unknown);
        m.insert("USER", TokenType::User);
        m.insert("VALIDATION", TokenType::Validation);
        m.insert("VALUE", TokenType::Value);
        m.insert("VARIABLES", TokenType::Variables);
        m.insert("VIEW", TokenType::View);
        m.insert("VISIBLE", TokenType::Visible);
        m.insert("WARNINGS", TokenType::Warnings);
        m.insert("WEEK", TokenType::Week);
        m.insert("WEIGHT_STRING", TokenType::WeightString);
        m.insert("WITHOUT", TokenType::Without);
        m.insert("X509", TokenType::X509);
        m.insert("YEAR", TokenType::Year);
        m.insert("WAIT", TokenType::Wait);
        m.insert("ADDDATE", TokenType::AddDate);
        m.insert("APPROX_COUNT_DISTINCT", TokenType::ApproxCountDistinct);
        m.insert("APPROX_PERCENTILE", TokenType::ApproxPercentile);
        m.insert("BIT_AND", TokenType::BitAnd);
        m.insert("BIT_OR", TokenType::BitOr);
        m.insert("BIT_XOR", TokenType::BitXor);
        m.insert("BOUND", TokenType::Bound);
        m.insert("BRIEF", TokenType::Brief);
        m.insert("CAST", TokenType::Cast);
        m.insert("COPY", TokenType::CopyKwd);
        m.insert("CONSTRAINTS", TokenType::Constraints);
        m.insert("CURTIME", TokenType::CurTime);
        m.insert("DATE_ADD", TokenType::DateAdd);
        m.insert("DATE_SUB", TokenType::DateSub);
        m.insert("DOT", TokenType::Dot);
        m.insert("DUMP", TokenType::Dump);
        m.insert("EXACT", TokenType::Exact);
        m.insert("EXPR_PUSHDOWN_BLACKLIST", TokenType::ExprPushdownBlacklist);
        m.insert("EXTRACT", TokenType::Extract);
        m.insert("FLASHBACK", TokenType::Flashback);
        m.insert("FOLLOWER", TokenType::Follower);
        m.insert("FOLLOWER_CONSTRAINTS", TokenType::FollowerConstraints);
        m.insert("FOLLOWERS", TokenType::Followers);
        m.insert("GET_FORMAT", TokenType::GetFormat);
        m.insert("GROUP_CONCAT", TokenType::GroupConcat);
        m.insert("NEXT_ROW_ID", TokenType::NextRowID);
        m.insert("INPLACE", TokenType::Inplace);
        m.insert("INSTANT", TokenType::Instant);
        m.insert("INTERNAL", TokenType::Internal);
        m.insert("JSON_ARRAYAGG", TokenType::JsonArrayagg);
        m.insert("JSON_OBJECTAGG", TokenType::JsonObjectAgg);
        m.insert("LEADER", TokenType::Leader);
        m.insert("LEADER_CONSTRAINTS", TokenType::LeaderConstraints);
        m.insert("LEARNER", TokenType::Learner);
        m.insert("LEARNER_CONSTRAINTS", TokenType::LearnerConstraints);
        m.insert("LEARNERS", TokenType::Learners);
        m.insert("MIN", TokenType::Min);
        m.insert("MAX", TokenType::Max);
        m.insert("NOW", TokenType::Now);
        m.insert("OPT_RULE_BLACKLIST", TokenType::OptRuleBlacklist);
        m.insert("PLACEMENT", TokenType::Placement);
        m.insert("PLAN", TokenType::Plan);
        m.insert("POSITION", TokenType::Position);
        m.insert("PRIMARY_REGION", TokenType::PrimaryRegion);
        m.insert("RECENT", TokenType::Recent);
        m.insert("RECREATOR", TokenType::Recreator);
        m.insert("RUNNING", TokenType::Running);
        m.insert("S3", TokenType::S3);
        m.insert("SCHEDULE", TokenType::Schedule);
        m.insert("STALENESS", TokenType::Staleness);
        m.insert("STD", TokenType::Std);
        m.insert("STDDEV", TokenType::Stddev);
        m.insert("STDDEV_POP", TokenType::StddevPop);
        m.insert("STDDEV_SAMP", TokenType::StddevSamp);
        m.insert("STOP", TokenType::Stop);
        m.insert("STRICT", TokenType::Strict);
        m.insert("STRONG", TokenType::Strong);
        m.insert("SUBDATE", TokenType::SubDate);
        m.insert("SUM", TokenType::Sum);
        m.insert("SUBSTRING", TokenType::Substring);
        m.insert("TIMESTAMPADD", TokenType::TimestampAdd);
        m.insert("TIMESTAMPDIFF", TokenType::TimestampDiff);
        m.insert("TLS", TokenType::Tls);
        m.insert("TOKUDB_DEFAULT", TokenType::TokudbDefault);
        m.insert("TOKUDB_FAST", TokenType::TokudbFast);
        m.insert("TOKUDB_LZMA", TokenType::TokudbLzma);
        m.insert("TOKUDB_QUICKLZ", TokenType::TokudbQuickLZ);
        m.insert("TOKUDB_SNAPPY", TokenType::TokudbSnappy);
        m.insert("TOKUDB_SMALL", TokenType::TokudbSmall);
        m.insert("TOKUDB_UNCOMPRESSED", TokenType::TokudbUncompressed);
        m.insert("TOKUDB_ZLIB", TokenType::TokudbZlib);
        m.insert("TOP", TokenType::Top);
        m.insert("TRIM", TokenType::Trim);
        m.insert("VARIANCE", TokenType::Variance);
        m.insert("VAR_POP", TokenType::VarPop);
        m.insert("VAR_SAMP", TokenType::VarSamp);
        m.insert("VERBOSE", TokenType::Verbose);
        m.insert("VOTER", TokenType::Voter);
        m.insert("VOTER_CONSTRAINTS", TokenType::VoterConstraints);
        m.insert("VOTERS", TokenType::Voters);
        m
    };
}
